trigger:
  branches:
    include:
    - main
    - stage
  paths:
    include:
    - ./*

resources:
  repositories:
    - repository: self
    - repository: AzureTemplates
      type: git
      name: azure-templates

  pipelines:
  - pipeline: DocumentationPipeline
    source: Backend\Documentation
    trigger:
      branches:
        include:
          - main
          - stage
  - pipeline: ProjectPipeline
    source: Backend\Project
    trigger:
      branches:
        include:
          - main
          - stage


variables:
  # Container registry service connection established during pipeline creation
  imageRepository: 'rover'
  containerRegistry: 'LCAcollect ACR'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  ${{ if eq('$(Build.SourceBranch)', 'refs/heads/main') }}:
    tag: '$(Build.BuildId)'
  ${{ else }}:
    tag: '$(Build.BuildId)-dev'

  # Helm registry
  azureSubscriptionForACR: 'LCAcollect Shared Container Reg'
  containerRegistryName: lcamolio.azurecr.io

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Helm Chart
  chartName: "router"
  workingDirectory: "helm"

stages:
- stage: Deploy
  displayName: Build and Deploy
  jobs:
    - job: Build
      steps:
        - script: echo '$(Build.SourceBranch)' && echo $(tag)
          displayName: Debug

        - task: DownloadPipelineArtifact@2
          displayName: Download project schema 
          inputs:
            buildType: 'specific'
            project: 'LCAcollect'
            definition: '7'
            buildVersionToDownload: 'latestFromBranch'
            branchName: '$(Build.SourceBranch)'
            artifactName: 'project.graphql'
            targetPath: '$(Build.SourcesDirectory)/schemas/project/'
            
        - task: DownloadPipelineArtifact@2
          displayName: Download documentation schema
          inputs:
            buildType: 'specific'
            project: 'LCAcollect'
            definition: '8'
            buildVersionToDownload: 'latestFromBranch'
            branchName: '$(Build.SourceBranch)'
            artifactName: 'documentation.graphql'
            targetPath: '$(Build.SourcesDirectory)/schemas/documentation/'

        - task: Docker@2
          displayName: Build Image
          inputs:
            command: build
            repository: $(imageRepository)
            dockerfile: $(dockerfilePath)
            buildContext: "./"
            containerRegistry: $(containerRegistry)
            arguments: --build-arg BUILD_VERSION=$(tag)
            tags: |
              $(tag)

        - task: Docker@2
          displayName: Push Image to Registry
          inputs:
            command: push
            repository: $(imageRepository)
            containerRegistry: $(containerRegistry)
            tags: |
              $(tag)
       

    - template: pipelines/helm-deploy.yaml@AzureTemplates
      parameters:
        dependsOn: Build
        vmImageName: $(vmImageName)
        azureSubscription: $(azureSubscriptionForACR)
        containerRegistry: $(containerRegistryName)
        chartName: "router"
        tag: $(tag)
        workingDirectory: "helm"